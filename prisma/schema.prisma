generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model order {
  id                      String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_name           String          @db.VarChar(255)
  customer_email          String          @db.VarChar(255)
  status                  String          @db.VarChar(50)
  sales_representative_id String          @db.Uuid
  created_at              DateTime        @default(now()) @db.Timestamp(6)
  updated_at              DateTime        @default(now()) @db.Timestamp(6)
  user                    user            @relation(fields: [sales_representative_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product_order           product_order[]
}

model organization {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  image       String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product     product[]
}

model product {
  id              String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String          @db.VarChar(255)
  description     String?         @db.VarChar(255)
  image           String?         @db.VarChar(255)
  organization_id String          @db.Uuid
  created_at      DateTime        @default(now()) @db.Timestamp(6)
  updated_at      DateTime        @default(now()) @db.Timestamp(6)
  organization    organization    @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product_order   product_order[]
  user_product    user_product[]
}

model product_order {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id String   @db.Uuid
  order_id   String   @db.Uuid
  quantity   Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  order      order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product    product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  order        order[]
  organization organization[]
  user_product user_product[]
}

model user_product {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  product_id String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  product    product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
